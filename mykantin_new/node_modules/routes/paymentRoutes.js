const express = require('express');
const axios = require('axios');
const router = express.Router();

// Fungsi untuk mendapatkan token autentikasi dari DANA
async function getAuthToken(clientId, clientSecret) {
  try {
    const response = await axios.post('https://api.dana.id/v1.0/auth/token', {
      client_id: clientId,
      client_secret: clientSecret
    });
    return response.data.access_token;
  } catch (error) {
    console.error('Error getting auth token: ', error);
    throw new Error('Failed to get authentication token');
  }
}

// Route untuk membuat pembayaran
router.post('/create-payment', async (req, res) => {
  const { amount, order_id, description } = req.body;
  const clientId = 'your_client_id';  // Ganti dengan client_id Anda
  const clientSecret = 'your_client_secret';  // Ganti dengan client_secret Anda

  try {
    // Dapatkan token autentikasi dari DANA
    const token = await getAuthToken(clientId, clientSecret);
    
    // Kirim request untuk melakukan pembayaran ke DANA API
    const paymentResponse = await axios.post(
      'https://api.dana.id/v1.0/payments',
      {
        amount: amount,
        order_id: order_id,
        description: description,
      },
      {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      }
    );

    // Mengembalikan URL untuk redirect ke aplikasi DANA
    res.status(200).json({
      redirect_url: paymentResponse.data.redirect_url,
    });
  } catch (error) {
    console.error('Error creating payment: ', error);
    res.status(500).json({ message: 'Error processing payment' });
  }
});

module.exports = router;
